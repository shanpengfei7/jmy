package com.jmy.entity;

import java.util.ArrayList;
import java.util.List;

public class PreTimeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public PreTimeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andLastTimeIsNull() {
			addCriterion("last_time is null");
			return (Criteria) this;
		}

		public Criteria andLastTimeIsNotNull() {
			addCriterion("last_time is not null");
			return (Criteria) this;
		}

		public Criteria andLastTimeEqualTo(Long value) {
			addCriterion("last_time =", value, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeNotEqualTo(Long value) {
			addCriterion("last_time <>", value, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeGreaterThan(Long value) {
			addCriterion("last_time >", value, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("last_time >=", value, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeLessThan(Long value) {
			addCriterion("last_time <", value, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeLessThanOrEqualTo(Long value) {
			addCriterion("last_time <=", value, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeIn(List<Long> values) {
			addCriterion("last_time in", values, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeNotIn(List<Long> values) {
			addCriterion("last_time not in", values, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeBetween(Long value1, Long value2) {
			addCriterion("last_time between", value1, value2, "lastTime");
			return (Criteria) this;
		}

		public Criteria andLastTimeNotBetween(Long value1, Long value2) {
			addCriterion("last_time not between", value1, value2, "lastTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeIsNull() {
			addCriterion("now_time is null");
			return (Criteria) this;
		}

		public Criteria andNowTimeIsNotNull() {
			addCriterion("now_time is not null");
			return (Criteria) this;
		}

		public Criteria andNowTimeEqualTo(Long value) {
			addCriterion("now_time =", value, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeNotEqualTo(Long value) {
			addCriterion("now_time <>", value, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeGreaterThan(Long value) {
			addCriterion("now_time >", value, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeGreaterThanOrEqualTo(Long value) {
			addCriterion("now_time >=", value, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeLessThan(Long value) {
			addCriterion("now_time <", value, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeLessThanOrEqualTo(Long value) {
			addCriterion("now_time <=", value, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeIn(List<Long> values) {
			addCriterion("now_time in", values, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeNotIn(List<Long> values) {
			addCriterion("now_time not in", values, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeBetween(Long value1, Long value2) {
			addCriterion("now_time between", value1, value2, "nowTime");
			return (Criteria) this;
		}

		public Criteria andNowTimeNotBetween(Long value1, Long value2) {
			addCriterion("now_time not between", value1, value2, "nowTime");
			return (Criteria) this;
		}

		public Criteria andIsUseIsNull() {
			addCriterion("is_use is null");
			return (Criteria) this;
		}

		public Criteria andIsUseIsNotNull() {
			addCriterion("is_use is not null");
			return (Criteria) this;
		}

		public Criteria andIsUseEqualTo(Byte value) {
			addCriterion("is_use =", value, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseNotEqualTo(Byte value) {
			addCriterion("is_use <>", value, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseGreaterThan(Byte value) {
			addCriterion("is_use >", value, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseGreaterThanOrEqualTo(Byte value) {
			addCriterion("is_use >=", value, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseLessThan(Byte value) {
			addCriterion("is_use <", value, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseLessThanOrEqualTo(Byte value) {
			addCriterion("is_use <=", value, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseIn(List<Byte> values) {
			addCriterion("is_use in", values, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseNotIn(List<Byte> values) {
			addCriterion("is_use not in", values, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseBetween(Byte value1, Byte value2) {
			addCriterion("is_use between", value1, value2, "isUse");
			return (Criteria) this;
		}

		public Criteria andIsUseNotBetween(Byte value1, Byte value2) {
			addCriterion("is_use not between", value1, value2, "isUse");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table pre_time
	 * @mbggenerated  Thu Jun 15 15:30:48 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table pre_time
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 13 10:16:38 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}